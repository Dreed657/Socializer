@model ProfileViewModel
@inject IUserService UserService
@inject UserManager<ApplicationUser> UserManager
@{
    this.ViewData["Title"] = Model.UserName;
    var friendStatus = await this.UserService.CheckFriendStatus(this.UserManager.GetUserId(this.User), Model.Id);
    var requestStatus = this.UserService.CheckRequestStatus(this.UserManager.GetUserId(this.User), Model.Id);
}

<div class="container">
    <div class="row">
        <img width="75" height="75" class="rounded-circle img-thumbnail p-1 profileImage" src="@Model.ProfileImageUrl" alt="profile-images"/>
        <img class="cover-image" src="@Model.CoverImageUrl" alt="cover-images" />
    </div>
    <div class="row text-center mt-2">
        <p class="h2">@Model.FirstName @Model.LastName</p>
        <p class="h6">Motivated by curiosity</p>

        <hr />
    </div>
    <div class="row">
        <div class="col">
            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home"
                       aria-selected="true">Posts</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="profile"
                       aria-selected="false">Friends</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="contact-tab" data-toggle="tab" href="#contact" role="tab" aria-controls="contact"
                       aria-selected="false">Photos</a>
                </li>
            </ul>
        </div>
        @if (this.UserManager.GetUserId(this.User) != Model.Id)
        {
            <div class="col text-right">
                @if (friendStatus)
                {
                    <a class="btn btn-outline-warning my-2">Message</a>
                }
                else
                {
                    if (!requestStatus)
                    {
                        <a class="btn btn-outline-info my-2" asp-controller="Profile" asp-action="AddFriend" asp-route-userId="@Model.Id" asp-route-returnUrl="@this.Context.Request.Path.Value">Add Friend</a>
                    }
                    else
                    {
                        <a class="btn btn-outline-light text-black-50 my-2 disabled">Request Pending</a>
                    }
                }
            </div>
        }
    </div>
    <div class="row">
        <div class="tab-content" id="myTabContent">
            <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                <div class="row">
                    <div class="col-md-4">
                        <div class="mx-2 text-center">
                            Raw denim you
                            probably haven't heard of them jean shorts Austin. Nesciunt tofu stumptown aliqua, retro synth master
                            cleanse. Mustache cliche tempor, williamsburg carles vegan helvetica. Reprehenderit butcher retro
                            keffiyeh dreamcatcher synth. Cosby sweater eu banh mi, qui irure terry richardson ex squid. Aliquip
                            placeat salvia cillum iphone. Seitan aliquip quis cardigan american apparel, butcher voluptate nisi
                            qui.
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="mx-2">
                            @foreach (var post in Model.Posts.OrderByDescending(x => x.CreatedOn))
                            {
                                <partial name="_PostPartial" model="post" />
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                <div class="row">
                    <p>Friends (@Model.FriendsCount)</p>
                </div>
                <div class="row-cols-2">
                    @foreach (var friend in Model.Friends)
                    {
                        <div class="col p-4 bg-dark rounded">
                            <div class="row">
                                <div class="col-2">
                                    <img class="align-self-start mr-3 img-thumbnail friend-thumbnail-img" src="@friend.ProfileImageUrl" alt="Generic placeholder image">
                                </div>
                                <div class="col text-left">
                                    <h5 class="my-0 text-white">
                                        <a class="text-white" asp-controller="Profile" asp-action="Index" asp-route-username="@friend.UserName">@friend.FirstName @friend.LastName</a>
                                    </h5>
                                    <sub class="text-white">@@@friend.UserName</sub>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="tab-pane fade" id="contact" role="tabpanel" aria-labelledby="contact-tab">
                Etsy mixtape
                wayfarers, ethical wes anderson tofu before they sold out mcsweeney's organic lomo retro fanny pack
                lo-fi farm-to-table readymade. Messenger bag gentrify pitchfork tattooed craft beer, iphone skateboard
                locavore carles etsy salvia banksy hoodie helvetica. DIY synth PBR banksy irony. Leggings gentrify
                squid 8-bit cred pitchfork. Williamsburg banh mi whatever gluten-free, carles pitchfork biodiesel fixie
                etsy retro mlkshk vice blog. Scenester cred you probably haven't heard of them, vinyl craft beer blog
                stumptown. Pitchfork sustainable tofu synth chambray yr.
            </div>
        </div>
    </div>
</div>


@*<div class="text-center col-2 mx-2 border-left border-right">
        <div class="row">
            <img width="75" height="75" class="rounded-circle img-thumbnail mx-auto p-1" src="@Model.ProfileImageUrl" alt="profile-images"/>
        </div>
        <div class="row my-2">
            <h3>@Model.FirstName @Model.LastName</h3>
        </div>
    </div>*@

@*<div class="row-cols-auto my-2">
        @if (await this.UserManager.IsInRoleAsync(await this.UserManager.FindByIdAsync(Model.Id), GlobalConstants.AdministratorRoleName))
        {
            <span class="badge badge-danger" alt="Administrator"><i class="fas fa-user-shield"></i> Administrator</span>
        }
        @if (await this.UserManager.IsInRoleAsync(await this.UserManager.FindByIdAsync(Model.Id), GlobalConstants.VerifiedRoleName))
        {
            <span class="badge badge-info" alt="Verified"><i class="fas fa-check"></i> Verified</span>
        }
        @if (await this.UserManager.IsInRoleAsync(await this.UserManager.FindByIdAsync(Model.Id), GlobalConstants.DeveloperRoleName))
        {
            <span class="badge badge-dark" alt="Developer"><i class="fab fa-dev"></i> Developer</span>
        }
    </div>

    @if (this.UserManager.GetUserId(this.User) != Model.Id)
    {
        <div class="row">
            <div class="col">
                @if (friendStatus)
                {
                    <a class="btn btn-outline-warning my-2">Message</a>
                }
                else
                {
                    if (!requestStatus)
                    {
                        <a class="btn btn-outline-info my-2" asp-controller="Profile" asp-action="AddFriend" asp-route-userId="@Model.Id" asp-route-returnUrl="@this.Context.Request.Path.Value">Add Friend</a>
                    }
                    else
                    {
                        <a class="btn btn-outline-light text-black-50 my-2 disabled">Request Pending</a>
                    }
                }
            </div>
        </div>
    }
    @if (!string.IsNullOrEmpty(Model.Description))
    {
        <p>@Model.Description</p>
    }
    <div class="row">
        <p><i class="fas fa-genderless"></i> @Model.Gender.ToString()</p>
        <p><i class="far fa-clock"></i> Joined in @Model.CreatedOn.ToString("M")</p>
        <p><i class="fas fa-birthday-cake"></i> Born on @Model.Birthdate.ToShortDateString()</p>
    </div>*@