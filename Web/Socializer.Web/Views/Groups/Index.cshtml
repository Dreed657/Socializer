@model GroupViewModel
@inject UserManager<ApplicationUser> UserManager
@inject IGroupService GroupService

@{
    this.ViewData["Title"] = "Group " + @Model.Name;
}
<div class="container">
    <div class="row">
        @* Cover *@
        <img class="group-cover" src="https://via.placeholder.com/728x90.png" alt="Alternate Text" />
    </div>
    <div class="row p-3">
        @* Info *@
        <div class="col">
            <h3>@Model.Name</h3>
            <h6><i class="fas fa-globe-europe"></i> Public Group <i class="fas fa-circle"></i> @Model.MembersCount Members</h6>
        </div>
        <div class="col-3 my-auto">
            @if (this.GroupService.IsMemberInGroup(Model.Id, this.UserManager.GetUserId(this.User)))
            {
                <button type="button" class="btn btn-outline-warning float-right">Edit Group</button>
            }
            else
            {
                <a class="btn btn-outline-primary float-right" asp-controller="Groups" asp-action="JoinGroup" asp-route-groupId="@Model.Id" asp-route-returnUrl="@($"{this.Context.Request.Path.Value}?groupId={Model.Id}")">Join Group</a>
            }
        </div>
    </div>
    <div class="row">
        <div class="col-8">
            @if (this.GroupService.IsMemberInGroup(Model.Id, this.UserManager.GetUserId(this.User)))
            {
                <div>
                    <form asp-controller="Posts" asp-action="Create" method="post">
                        <div class="form-group">
                            <label for="content"></label>
                            <input type="text" class="form-control" id="content" name="content" placeholder="Content" />
                        </div>
                        <button type="submit" class="btn btn-primary">Submit</button>
                        <input type="text" name="groupId" hidden="" value="@Model.Id" />
                        <input type="text" name="returnUrl" hidden="" value="@($"{this.Context.Request.Path.Value}?groupId={Model.Id}")" />
                    </form>
                </div>
            }

            @if (Model.Posts.Any())
            {
                @foreach (var post in Model.Posts.OrderByDescending(x => x.CreatedOn))
                {
                    <partial name="_PostPartial" model="post" />
                }
            }
            else
            {
                <h3 class="text-center">This group don't have any posts yet.</h3>
            }
        </div>
        <div class="col">
            <div class="group-info p-2">
                <div class="row m-2">
                    <div class="border-bottom-dark p-2">
                        <h3>About</h3>
                    </div>
                    <div class="">
                        <p>@Model.Description</p>
                    </div>
                </div>
                <div class="row my-3 mx-2">
                    <div class="col-1 px-2">
                        <i class="fas fa-globe-europe"></i>
                    </div>
                    <div class="col pl-0">
                        <p class="mb-0">Public Group</p>
                        <sub>Anyone can see who's in the group and what they post.</sub>
                    </div>
                </div>
                <div class="row my-3 mx-2">
                    <div class="col-1 px-2">
                        <i class="far fa-eye"></i>
                    </div>
                    <div class="col pl-0">
                        <p class="mb-0">Visible</p>
                        <sub>Anyone can find this group.</sub>
                    </div>
                </div>
                <div class="row my-3 mx-2">
                    <div class="col-1 px-2">
                        <i class="fas fa-street-view"></i>
                    </div>
                    <div class="col pl-0">
                        <p class="mb-0">Sofia, Bulgaria</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
