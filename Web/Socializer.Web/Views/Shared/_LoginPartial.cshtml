@using Socializer.Common
@using Socializer.Data.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (this.SignInManager.IsSignedIn(this.User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Profile" asp-action="Index" asp-route-username="@this.UserManager.GetUserName(this.User)" title="Manage">Hello @this.UserManager.GetUserAsync(this.User).GetAwaiter().GetResult().FirstName!</a>
        </li>
        <li class="nav-item">
            <div class="dropdown">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fas fa-sort-down"></i></button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@(this.Url.Action("Index", "Home", new {area = string.Empty}))">
                        <button type="submit" class="dropdown-item">Logout</button>
                    </form>
                </div>
            </div>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
